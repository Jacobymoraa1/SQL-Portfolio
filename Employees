CREATE TABLE EMPLOYEES (
                            EMP_ID CHAR(9) NOT NULL, 
                            F_NAME VARCHAR(15) NOT NULL,
                            L_NAME VARCHAR(15) NOT NULL,
                            SSN CHAR(9),
                            B_DATE DATE,
                            SEX CHAR,
                            ADDRESS VARCHAR(30),
                            JOB_ID CHAR(9),
                            SALARY DECIMAL(10,2),
                            MANAGER_ID CHAR(9),
                            DEP_ID CHAR(9) NOT NULL,
                            PRIMARY KEY (EMP_ID));
                            
  CREATE TABLE JOB_HISTORY (
                            EMPL_ID CHAR(9) NOT NULL, 
                            START_DATE DATE,
                            JOBS_ID CHAR(9) NOT NULL,
                            DEPT_ID CHAR(9),
                            PRIMARY KEY (EMPL_ID,JOBS_ID));
 
 CREATE TABLE JOBS (
                            JOB_IDENT CHAR(9) NOT NULL, 
                            JOB_TITLE VARCHAR(15) ,
                            MIN_SALARY DECIMAL(10,2),
                            MAX_SALARY DECIMAL(10,2),
                            PRIMARY KEY (JOB_IDENT));

CREATE TABLE DEPARTMENTS (
                            DEPT_ID_DEP CHAR(9) NOT NULL, 
                            DEP_NAME VARCHAR(15) ,
                            MANAGER_ID CHAR(9),
                            LOC_ID CHAR(9),
                            PRIMARY KEY (DEPT_ID_DEP));

CREATE TABLE LOCATIONS (
                            LOCT_ID CHAR(9) NOT NULL,
                            DEP_ID_LOC CHAR(9) NOT NULL,
                            PRIMARY KEY (LOCT_ID,DEP_ID_LOC));
                            
INSERT INTO employees VALUES (1001,'John','Thomas',123456,'1976-01-09','M',"5631 Rice, OakPark,IL",100,100000,30001,2);
INSERT INTO employees VALUES (1002,'Alice','James',123457,'1972-07-31','F',"980 Berry ln, Elgin,IL",200,80000,30002,5);
INSERT INTO employees VALUES (1003,'Steve','Wells',123458,'1980-08-10','M',"291 Springs, Gary,IL",300,50000,30002,5);
INSERT INTO employees VALUES (1004,'Santosh','Kumar',123459,'1985-07-20','M',"511 Aurora Av, Aurora,IL",400,60000,30004,5);
INSERT INTO employees VALUES (1005,'Ahmed','Hussain',123410,'1981-01-04','M',"216 Oak Tree, Geneva,IL",500,70000,30001,2);
INSERT INTO employees VALUES (1006,'Nancy','Allen',123411,'1978-02-06','F',"111 Green Pl, Elgin,IL",600,90000,30001,2);
INSERT INTO employees VALUES (1007,'Mary','Thomas',123412,'1975-05-05','F',"100 Rose Pl, Gary,IL",650,65000,30003,7);
INSERT INTO employees VALUES (1008,'Bharath','Gupta',123413,'1985-05-06','M',"145 Berry Ln, Naperville,IL",660,65000,30003,7);
INSERT INTO employees VALUES (1009,'Andrea','Jones',123414,'1990-07-09','F',"120 Fall Creek, Gary,IL",234,70000,30003,7);
INSERT INTO employees VALUES (1010,'Ann','Jacob',123415,'1982-03-30','F',"111 Britany Springs,Elgin,IL",220,70000,30004,5);

SELECT * FROM employees;

INSERT INTO departments VALUES (2,'Architect Group',30001,0001);
INSERT INTO departments VALUES (5,'Software Group',30002,0002);
INSERT INTO departments VALUES (7,'Design Team',30003,0003);

INSERT INTO jobs VALUES (100,'Sr. Architect',60000,100000);
INSERT INTO jobs VALUES (200,'Sr.Software Dev',60000,80000);
INSERT INTO jobs VALUES (300,'Jr.Software Dev',40000,60000);
INSERT INTO jobs VALUES (400,'Jr.Software Dev',40000,60000);
INSERT INTO jobs VALUES (500,'Jr.Architect',50000,70000);
INSERT INTO jobs VALUES (600,'Lead Architect',70000,100000);
INSERT INTO jobs VALUES (650,'Jr.Designer',60000,70000);
INSERT INTO jobs VALUES (660,'Jr.Designer',60000,70000);
INSERT INTO jobs VALUES (234,'Sr.Designer',70000,90000);
INSERT INTO jobs VALUES (220,'Sr.Designer',70000,90000);

INSERT INTO locations VALUES (0001,2);
INSERT INTO locations VALUES (0002,5);
INSERT INTO locations VALUES (0003,7);

INSERT INTO job_history VALUES (1001,'2000-08-01',100,2);
INSERT INTO job_history VALUES (1002,'2001-08-01',200,5);
INSERT INTO job_history VALUES (1003,'2001-08-16',300,5);
INSERT INTO job_history VALUES (1004,'2000-08-16',400,5);
INSERT INTO job_history VALUES (1005,'2000-05-30',500,2);
INSERT INTO job_history VALUES (1006,'2001-08-16',600,2);
INSERT INTO job_history VALUES (1007,'2002-05-30',650,7);
INSERT INTO job_history VALUES (1008,'2010-05-06',660,7);
INSERT INTO job_history VALUES (1009,'2016-08-16',234,7);
INSERT INTO job_history VALUES (1010,'2016-08-16',220,5);

SELECT * FROM locations;
SELECT * FROM job_history;
SELECT * FROM jobs;

/*Retrieve only the EMPLOYEES records that correspond to jobs in the JOBS table*/
SELECT * FROM employees 
WHERE job_id IN (SELECT job_ident FROM jobs);

/*Retrieve only the list of employees whose JOB_TITLE is Jr. Designer*/
SELECT * FROM employees 
WHERE job_id IN (SELECT job_ident FROM jobs WHERE job_title = 'Jr. Designer');

/*Retrieve JOB information and who earn more than $70,000*/
SELECT * FROM jobs
WHERE job_ident IN (SELECT job_id from employees where salary > 70000);

/*Retrieve JOB information and whose birth year is after 1976*/
SELECT job_ident,job_title FROM jobs 
WHERE job_ident IN (SELECT job_id FROM employees WHERE YEAR(b_date) > 1976);

/*Retrieve JOB information for female employees whose birth year is after 1976*/
SELECT * FROM jobs 
WHERE job_ident IN (SELECT job_id FROM employees WHERE YEAR(b_date)>1976 AND sex = 'F');

/*Perform an implicit cartesian/cross join between EMPLOYEES and JOBS tables*/
SELECT * FROM employees, jobs;

/*Retrieve only the EMPLOYEES records that correspond to jobs in the JOBS table*/
SELECT * FROM employees, jobs 
WHERE employees.job_id = jobs.job_ident;

/*Redo the previous query, using shorter aliases for table names*/
SELECT * FROM employees E, jobs J 
WHERE E.job_id = J.job_ident;

/*Redo the previous query, but retrieve only the Employee ID, Employee Name and Job Title*/
SELECT emp_id, f_name,l_name,job_title FROM employees E, jobs J 
WHERE E.job_id = J.job_ident;

/*Redo the previous query, but specify the fully qualified column names with aliases in the SELECT clause*/
SELECT E.emp_id,E.f_name,E.l_name,J.job_title FROM employees E, jobs J 
WHERE E.job_id = J.job_ident;
